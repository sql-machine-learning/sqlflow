name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ develop ]
  pull_request:
    branches: [ develop ]

jobs:
  test:
    runs-on: [self-hosted, linux]
    env:
      SQLFLOW_PARSER_SERVER_PORT: 12300
      SQLFLOW_PARSER_SERVER_LOADING_PATH: "/usr/local/sqlflow/java"
    steps:
    - uses: actions/checkout@v1
    - name: pre-commit
      run: |
        go generate ./...
        go install ./...
        pre-commit run -a --show-diff-on-failure
    - name: build mysql image
      run: docker build -t sqlflow:mysql -f docker/mysql/Dockerfile .
    - name: mysql unit test
      run: |
        set -e
        echo cwd ${{ github.workspace }}
        bash scripts/test/prepare.sh
        source build/env/bin/activate
        docker stop mysql || true
        docker rm mysql || true
        docker run --rm --name mysql -d -p 13306:3306 -v ${{ github.workspace }}:/work sqlflow:mysql
        SQLFLOW_TEST_DB_MYSQL_ADDR="127.0.0.1:13306" PYTHONPATH=${{ github.workspace }}/python scripts/test/mysql.sh
        # bash scripts/travis/upload_codecov.sh
    - name: hive unit test
      run: |
        set -e
        source build/env/bin/activate
        docker pull sqlflow/gohive:dev
        docker stop hive || true
        docker rm hive || true
        docker run --rm -d --name=hive --net=host sqlflow/gohive:dev python3 -m http.server 8899
        PYTHONPATH=${{ github.workspace }}/python scripts/test/hive.sh
        # bash scripts/travis/upload_codecov.sh
    - name: maxcompute unit test
      run: |
        set -e
        source build/env/bin/activate
        export SQLFLOW_TEST_DB_MAXCOMPUTE_AK=$MAXCOMPUTE_AK
        export SQLFLOW_TEST_DB_MAXCOMPUTE_SK=$MAXCOMPUTE_SK
        PYTHONPATH=${{ github.workspace }}/python bash scripts/test/maxcompute.sh
        # bash scripts/travis/upload_codecov.sh
    - name: java unit test
      run: |
        set -e
        bash scripts/test/java.sh
    - name: workflow mode ci
      run: |
        set -e
        source build/env/bin/activate
        bash scripts/test/workflow.sh
        # bash scripts/travis/upload_codecov.sh
  push:
    runs-on: ubuntu-latest
    needs: test
    steps:
    - uses: actions/checkout@v2
    - uses: olegtarasov/get-tag@v2
      id: tagName
    - if: ${{ github.event_name == 'schedule' }}
      id: cronName
      run: echo "::set-env name=TRAVIS_EVENT_TYPE::cron"
    - name: push server images
      run: |
        export TRAVIS_TAG=${{ steps.tagName.outputs.tag }}
        export TRAVIS_BRANCH=${{ github.head_ref }}
        export TRAVIS_PULL_REQUEST=${{ github.event.number }}
        bash scripts/travis/deploy_docker.sh
    - name: release latest linux client binary
      run: |
        export TRAVIS_TAG=${{ steps.tagName.outputs.tag }}
        export TRAVIS_BRANCH=${{ github.head_ref }}
        export TRAVIS_PULL_REQUEST=${{ github.event.number }}
        bash scripts/travis/deploy_client.sh
  # TODO(typhoonzero): remove travis envs when we have moved to github actions completely
  macos-client:
    runs-on: macos-latest
    needs: test
    steps:
    - uses: actions/checkout@v2
    - uses: olegtarasov/get-tag@v2
      id: tagName
    - if: ${{ github.event_name == 'schedule' }}
      id: cronName
      run: echo "::set-env name=TRAVIS_EVENT_TYPE::cron"
    - name: relase latest macos client binary
      run: |
        export TRAVIS_TAG=${{ steps.tagName.outputs.tag }}
        export TRAVIS_BRANCH=${{ github.head_ref }}
        export TRAVIS_PULL_REQUEST=${{ github.event.number }}
        bash scripts/travis/deploy_client.sh
  windows-client:
    runs-on: windows-latest
    needs: test
    steps:
    - uses: actions/checkout@v2
    - uses: olegtarasov/get-tag@v2
      id: tagName
    - if: ${{ github.event_name == 'schedule' }}
      id: cronName
      run: echo "::set-env name=TRAVIS_EVENT_TYPE::cron"
    - name: relase latest windows client binary
      env: 
        TRAVIS_OS_NAME: windows
      run: |
        $TRAVIS_TAG="${{ steps.tagName.outputs.tag }}"
        $TRAVIS_PULL_REQUEST="${{ github.event.number }}"
        $TRAVIS_BRANCH="${{ github.head_ref }}"
        scripts/travis/deploy_client.sh
