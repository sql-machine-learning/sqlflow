language: go


# SQLFlow uses sqlflow.org/sqlflow as vanity import path. TravisCI
# supports it via go_import_path.  Ref:
# https://docs.travis-ci.com/user/languages/go/#go-import-path
go_import_path: sqlflow.org/sqlflow
go:
- 1.13.x
branches:
  only:
  - gh-pages
  - develop
  - "/release-*/"
  - "/^v\\d+\\.\\d+(\\.\\d+)?(-\\S*)?$/"
service:
- docker


# Note(tony): Update to newer version of Docker to allow
# Dockerfile being outside of the context directory
# https://github.com/docker/compose/issues/4926#issuecomment-370501452
addons:
  apt:
    packages:
    - docker-ce
install:

# Note(tony): TravisCI's native `go get ${gobuild_args} ./...` failed with
# `/usr/bin/ld: final link failed: Bad value`, the cause is the system linker
# being not up to date: https://github.com/golang/go/issues/15038
# So I decided to skip install, and go get inside SQLFlow devbox Docker image
# Ref build: https://travis-ci.com/sql-machine-learning/sqlflow/builds/107870583
- echo "skip install"
jobs:
  include:
  - stage: BuildDockerAndPreCommit
    script:
    - set -e
    - $TRAVIS_BUILD_DIR/scripts/travis/build.sh
    - docker run --rm -it -v $TRAVIS_BUILD_DIR:/work -w /work sqlflow:dev
      pre-commit run -a --show-diff-on-failure
  - stage: Unitests
    # env is just used for displaying the job type in travis web page
    env: SQLFLOW_TEST_DB=mysql
    script:
    - set -e
    - $TRAVIS_BUILD_DIR/scripts/travis/build.sh
    - docker run --rm -v $TRAVIS_BUILD_DIR:/work -w /work sqlflow:ci
      scripts/test/units.sh
    - docker run --rm -v $TRAVIS_BUILD_DIR:/work -w /work sqlflow:ci
      scripts/upload_coveralls.sh
  - env: SQLFLOW_TEST_DB=hive # run more parallel tests in the same stage:
    script:
    - set -e
    - $TRAVIS_BUILD_DIR/scripts/travis/build.sh
    - docker pull sqlflow/gohive:dev
    - docker run -d --name=hive sqlflow/gohive:dev python3 -m http.server 8899
    - docker run --rm -it --net=container:hive
      -v $TRAVIS_BUILD_DIR:/work -w /work
      -v $GOPATH:/root/go
      sqlflow:ci scripts/test/hive.sh
  - env: SQLFLOW_TEST_DB=maxcompute
    script:
    - set -e
    - $TRAVIS_BUILD_DIR/scripts/travis/build.sh
    - $TRAVIS_BUILD_DIR/scripts/travis/setup_minikube.sh
    - docker run --rm --net=host
      -v /var/run/docker.sock:/var/run/docker.sock
      -v $HOME/.kube:/root/.kube
      -v /home/$USER/.minikube/:/home/$USER/.minikube/
      -v $TRAVIS_BUILD_DIR:/work -w /work
      sqlflow:ci scripts/test/ipython.sh
    - docker run --rm --net=host
      -e SQLFLOW_TEST_DB_MAXCOMPUTE_AK=$MAXCOMPUTE_AK
      -e SQLFLOW_TEST_DB_MAXCOMPUTE_SK=$MAXCOMPUTE_SK
      -v /var/run/docker.sock:/var/run/docker.sock
      -v $HOME/.kube:/root/.kube
      -v /home/$USER/.minikube/:/home/$USER/.minikube/
      -v $TRAVIS_BUILD_DIR:/work -w /work
      sqlflow:ci scripts/test/maxcompute.sh
  - env: SQLFLOW_TEST=java
    script:
    - set -e
    - $TRAVIS_BUILD_DIR/scripts/travis/build.sh
    - docker run --rm
      -v $TRAVIS_BUILD_DIR:/work -w /work
      sqlflow:ci scripts/test/java.sh
  - env: SQLFLOW_TEST=workflow
    script:
    - set -e
    - $TRAVIS_BUILD_DIR/scripts/travis/setup_minikube.sh
    - eval $(sudo minikube docker-env)
    - $TRAVIS_BUILD_DIR/scripts/travis/build.sh
    - docker tag sqlflow:ci sqlflow:submitter
    - docker run --rm --net=host
      -e SQLFLOW_WORKFLOW_STEP_IMAGE=sqlflow:submitter
      -v /var/run/docker.sock:/var/run/docker.sock
      -v $HOME/.kube:/root/.kube
      -v /home/$USER/.minikube/:/home/$USER/.minikube/
      -v $TRAVIS_BUILD_DIR:/work -w /work
      sqlflow:ci scripts/test/workflow.sh
  - stage: deploy
    script:
    - $TRAVIS_BUILD_DIR/scripts/travis/deploy.sh # Push only after PR merging.
